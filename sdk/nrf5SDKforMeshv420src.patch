diff -Naur -x '*.DS_Store' -x '*.elf' -x '*.hex' -x '*.map' -x '*.o' -x '*.bin' -x _build -x Output -x '*.emSession' nrf5SDKforMeshv420src.orig/CMake/FindSDK.cmake nrf5SDKforMeshv420src/CMake/FindSDK.cmake
--- nrf5SDKforMeshv420src.orig/CMake/FindSDK.cmake	2020-06-30 07:23:10.000000000 +0100
+++ nrf5SDKforMeshv420src/CMake/FindSDK.cmake	2020-09-23 18:19:02.000000000 +0100
@@ -1,4 +1,4 @@
-set(nRF5_SDK_VERSION "nRF5_SDK_16.0.0_98a08e2" CACHE STRING "nRF5 SDK")
+set(nRF5_SDK_VERSION "nRF5_SDK_17.0.2_d674dde" CACHE STRING "nRF5 SDK")
 
 if (NOT nRF5_SDK_VERSION)
     message(FATAL_ERROR "You need to specifiy a nRF5_SDK_VERSION to use.")
diff -Naur -x '*.DS_Store' -x '*.elf' -x '*.hex' -x '*.map' -x '*.o' -x '*.bin' -x _build -x Output -x '*.emSession' nrf5SDKforMeshv420src.orig/CMake/GenerateSESProject.cmake nrf5SDKforMeshv420src/CMake/GenerateSESProject.cmake
--- nrf5SDKforMeshv420src.orig/CMake/GenerateSESProject.cmake	2020-06-30 07:23:10.000000000 +0100
+++ nrf5SDKforMeshv420src/CMake/GenerateSESProject.cmake	2020-09-23 18:19:02.000000000 +0100
@@ -11,6 +11,7 @@
 set(nrf52833_xxAA_STARTUP_FILE "${SDK_ROOT}/modules/nrfx/mdk/ses_startup_nrf52833.s")
 set(nrf52840_xxAA_STARTUP_FILE "${SDK_ROOT}/modules/nrfx/mdk/ses_startup_nrf52840.s")
 set(SES_COMMON_STARTUP_FILE "${SDK_ROOT}/modules/nrfx/mdk/ses_startup_nrf_common.s")
+set(DIR_OF_THIS_FILE ${CMAKE_CURRENT_LIST_DIR})
 
 function (add_ses_project TARGET_NAME)
     if (GENERATE_SES_PROJECTS)
@@ -28,15 +29,14 @@
             endif()
         endforeach ()
         # We'll remove the GCC one in python
-        set(target_sources ${target_sources} ${${PLATFORM}_STARTUP_FILE})
-        set(target_sources ${target_sources} ${SES_COMMON_STARTUP_FILE} "${CMAKE_CURRENT_SOURCE_DIR}/include/sdk_config.h")
+        set(target_sources ${target_sources} ${${PLATFORM}_STARTUP_FILE} ${SES_COMMON_STARTUP_FILE} "${CMAKE_CURRENT_SOURCE_DIR}/sdk_config.h")
         set(target_defines NO_VTOR_CONFIG ${target_defines})
 
         # Remove duplicates such as model_common.c
         list(REMOVE_DUPLICATES target_sources)
         list(REMOVE_DUPLICATES target_include_dirs)
 
-        file(RELATIVE_PATH default_sdk_path ${CMAKE_CURRENT_SOURCE_DIR} "${CMAKE_SOURCE_DIR}/../nRF5_SDK_16.0.0_98a08e2")
+        file(RELATIVE_PATH default_sdk_path ${CMAKE_CURRENT_SOURCE_DIR} "${SDK_ROOT}")
 
         set(target_sources_with_macro "")
         foreach (target_source IN ITEMS ${target_sources})
@@ -64,12 +64,12 @@
     },
     \"platform\": {
         \"name\": \"${PLATFORM}\",
-        \"definition_file\": \"${CMAKE_SOURCE_DIR}/tools/configuration/platforms.json\"
+        \"definition_file\": \"${DIR_OF_THIS_FILE}/../tools/configuration/platforms.json\"
     },
     \"softdevice\": {
         \"name\": \"${SOFTDEVICE}\",
         \"hex_file\": \"${sd_hex}\",
-        \"definition_file\": \"${CMAKE_SOURCE_DIR}/tools/configuration/softdevices.json\"
+        \"definition_file\": \"${DIR_OF_THIS_FILE}/../tools/configuration/softdevices.json\"
     }
 }")
 
diff -Naur -x '*.DS_Store' -x '*.elf' -x '*.hex' -x '*.map' -x '*.o' -x '*.bin' -x _build -x Output -x '*.emSession' nrf5SDKforMeshv420src.orig/CMake/SES/SESGenerator.py nrf5SDKforMeshv420src/CMake/SES/SESGenerator.py
--- nrf5SDKforMeshv420src.orig/CMake/SES/SESGenerator.py	2020-06-30 07:23:10.000000000 +0100
+++ nrf5SDKforMeshv420src/CMake/SES/SESGenerator.py	2020-09-23 18:19:02.000000000 +0100
@@ -88,7 +88,6 @@
     Group(name="Mesh stack", files=[], match_string="mesh/stack"),
     Group(name="GATT", files=[], match_string="mesh/gatt"),
     Group(name="DFU", files=[], match_string="mesh/dfu"),
-    Group(name="Toolchain", files=[File("$(StudioDir)/source/thumb_crt0.s")], match_string="toolchain"),
     Group(name="Access", files=[], match_string="mesh/access"),
     Group(name="Bearer", files=[], match_string="mesh/bearer"),
     Group(name="SEGGER RTT", files=[], match_string="rtt"),
@@ -99,7 +98,9 @@
     Group(name="Health Model", files=[], match_string="models/foundation/health"),
     Group(name="Generic OnOff Model", files=[], match_string="models/model_spec/generic_onoff"),
     Group(name="Simple OnOff Model", files=[], match_string="models/vendor/simple_on_off"),
-    Group(name="Remote provisioning Model", files=[], match_string="models/proprietary/pb_remote")]
+    Group(name="Remote provisioning Model", files=[], match_string="models/proprietary/pb_remote"),
+    Group(name="Toolchain", files=[File("$(StudioDir)/source/thumb_crt0.s")], match_string="toolchain"),
+]
 
 def unix_relative_path_get(path1, path2):
     if not path1.startswith('$('):
@@ -169,7 +170,7 @@
     config["target"]["ram"] = calculate_ram_limits(config)
     config["platform"]["fpu"] = config["platform"]["config"]["arch"] == "cortex-m4f"
     config["softdevice"]["hex_file"] = unix_relative_path_get(config["softdevice"]["hex_file"], out_dir)
-    config["sdk_default_path"] = unix_relative_path_get('../../../nRF5_SDK_16.0.0_98a08e2', out_dir)
+    config["sdk_default_path"] = unix_relative_path_get('../../../nRF5_SDK_17.0.2_d674dde', out_dir)
     s = ""
 
     with open("ses.xml", "r") as f:
diff -Naur -x '*.DS_Store' -x '*.elf' -x '*.hex' -x '*.map' -x '*.o' -x '*.bin' -x _build -x Output -x '*.emSession' nrf5SDKforMeshv420src.orig/CMake/nrfjprog.py nrf5SDKforMeshv420src/CMake/nrfjprog.py
--- nrf5SDKforMeshv420src.orig/CMake/nrfjprog.py	2020-06-30 07:23:10.000000000 +0100
+++ nrf5SDKforMeshv420src/CMake/nrfjprog.py	2020-09-23 18:19:02.000000000 +0100
@@ -41,6 +41,8 @@
 
 
 def select_devices(devices):
+    if len(devices) == 1:
+        return [devices[0]]
     device_range = list(range(len(devices)))
     number = None
     while number is None:
diff -Naur -x '*.DS_Store' -x '*.elf' -x '*.hex' -x '*.map' -x '*.o' -x '*.bin' -x _build -x Output -x '*.emSession' nrf5SDKforMeshv420src.orig/CMake/sdk/nRF5_SDK_16.0.0_98a08e2.cmake nrf5SDKforMeshv420src/CMake/sdk/nRF5_SDK_16.0.0_98a08e2.cmake
--- nrf5SDKforMeshv420src.orig/CMake/sdk/nRF5_SDK_16.0.0_98a08e2.cmake	2020-06-30 07:23:10.000000000 +0100
+++ nrf5SDKforMeshv420src/CMake/sdk/nRF5_SDK_16.0.0_98a08e2.cmake	1970-01-01 01:00:00.000000000 +0100
@@ -1,22 +0,0 @@
-set(nRF5_SDK_16.0.0_98a08e2_SOURCE_FILES
-    "${SDK_ROOT}/components/libraries/util/app_error.c"
-    "${SDK_ROOT}/components/libraries/util/app_util_platform.c")
-
-set(nRF5_SDK_16.0.0_98a08e2_INCLUDE_DIRS
-    "${SDK_ROOT}/integration/nrfx"
-    "${SDK_ROOT}/components/libraries/util"
-    "${SDK_ROOT}/components/libraries/timer"
-    "${SDK_ROOT}/components/libraries/log"
-    "${SDK_ROOT}/components/libraries/log/src"
-    "${SDK_ROOT}/components/libraries/experimental_section_vars"
-    "${SDK_ROOT}/components/libraries/delay")
-
-if (TOOLCHAIN STREQUAL "armcc")
-    set(nRF5_SDK_16.0.0_98a08e2_SOURCE_FILES
-        ${nRF5_SDK_16.0.0_98a08e2_SOURCE_FILES}
-        "${SDK_ROOT}/components/libraries/util/app_error_handler_keil.c")
-else ()
-    set(nRF5_SDK_16.0.0_98a08e2_SOURCE_FILES
-        ${nRF5_SDK_16.0.0_98a08e2_SOURCE_FILES}
-        "${SDK_ROOT}/components/libraries/util/app_error_handler_gcc.c")
-endif ()
diff -Naur -x '*.DS_Store' -x '*.elf' -x '*.hex' -x '*.map' -x '*.o' -x '*.bin' -x _build -x Output -x '*.emSession' nrf5SDKforMeshv420src.orig/CMake/sdk/nRF5_SDK_17.0.2_d674dde.cmake nrf5SDKforMeshv420src/CMake/sdk/nRF5_SDK_17.0.2_d674dde.cmake
--- nrf5SDKforMeshv420src.orig/CMake/sdk/nRF5_SDK_17.0.2_d674dde.cmake	1970-01-01 01:00:00.000000000 +0100
+++ nrf5SDKforMeshv420src/CMake/sdk/nRF5_SDK_17.0.2_d674dde.cmake	2020-09-23 18:19:02.000000000 +0100
@@ -0,0 +1,22 @@
+set(nRF5_SDK_17.0.2_d674dde_SOURCE_FILES
+    "${SDK_ROOT}/components/libraries/util/app_error.c"
+    "${SDK_ROOT}/components/libraries/util/app_util_platform.c")
+
+set(nRF5_SDK_17.0.2_d674dde_INCLUDE_DIRS
+    "${SDK_ROOT}/integration/nrfx"
+    "${SDK_ROOT}/components/libraries/util"
+    "${SDK_ROOT}/components/libraries/timer"
+    "${SDK_ROOT}/components/libraries/log"
+    "${SDK_ROOT}/components/libraries/log/src"
+    "${SDK_ROOT}/components/libraries/experimental_section_vars"
+    "${SDK_ROOT}/components/libraries/delay")
+
+if (TOOLCHAIN STREQUAL "armcc")
+    set(nRF5_SDK_17.0.2_d674dde_SOURCE_FILES
+        ${nRF5_SDK_17.0.2_d674dde_SOURCE_FILES}
+        "${SDK_ROOT}/components/libraries/util/app_error_handler_keil.c")
+else ()
+    set(nRF5_SDK_17.0.2_d674dde_SOURCE_FILES
+        ${nRF5_SDK_17.0.2_d674dde_SOURCE_FILES}
+        "${SDK_ROOT}/components/libraries/util/app_error_handler_gcc.c")
+endif ()
diff -Naur -x '*.DS_Store' -x '*.elf' -x '*.hex' -x '*.map' -x '*.o' -x '*.bin' -x _build -x Output -x '*.emSession' nrf5SDKforMeshv420src.orig/CMake/toolchain/gccarmemb.cmake nrf5SDKforMeshv420src/CMake/toolchain/gccarmemb.cmake
--- nrf5SDKforMeshv420src.orig/CMake/toolchain/gccarmemb.cmake	2020-06-30 07:23:11.000000000 +0100
+++ nrf5SDKforMeshv420src/CMake/toolchain/gccarmemb.cmake	2020-09-23 18:19:02.000000000 +0100
@@ -42,12 +42,17 @@
     set_target_properties(${target_name} PROPERTIES LINK_FLAGS ${link_flags})
 endfunction (set_target_link_options)
 
-function (create_hex executable)
+function (create_hex executable symbols_to_remove)
+    list(JOIN symbols_to_remove ";-R;" symbols_to_remove)
+    set(symbols_to_remove "-R;${symbols_to_remove}")
     add_custom_command(
         TARGET ${executable}
         POST_BUILD
-        COMMAND arm-none-eabi-objcopy -O ihex ${CMAKE_CURRENT_BINARY_DIR}/${executable}.elf ${CMAKE_CURRENT_BINARY_DIR}/${executable}.hex
-        BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/${executable}.hex)
+        # Remove RTT symbol when building. See readme.md section "SEGGER RTT logging in bootloader and app"
+        COMMAND arm-none-eabi-objcopy ${symbols_to_remove} -O ihex ${CMAKE_CURRENT_BINARY_DIR}/${executable}.elf ${CMAKE_CURRENT_BINARY_DIR}/${executable}.hex
+        BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/${executable}.hex
+        VERBATIM
+    )
 
     add_custom_command(
         TARGET ${executable}
diff -Naur -x '*.DS_Store' -x '*.elf' -x '*.hex' -x '*.map' -x '*.o' -x '*.bin' -x _build -x Output -x '*.emSession' nrf5SDKforMeshv420src.orig/doc/getting_started/how_to_toolchain.md nrf5SDKforMeshv420src/doc/getting_started/how_to_toolchain.md
--- nrf5SDKforMeshv420src.orig/doc/getting_started/how_to_toolchain.md	2020-06-30 07:23:04.000000000 +0100
+++ nrf5SDKforMeshv420src/doc/getting_started/how_to_toolchain.md	2020-09-23 18:19:02.000000000 +0100
@@ -196,7 +196,7 @@
 
     .
     +-- nrf5_sdk_for_mesh/
-    +-- nRF5_SDK_16.0.0_98a08e2/
+    +-- nRF5_SDK_17.0.2_d674dde/
 
 
 You can get the correct SDK either manually or using a custom CMake target.
